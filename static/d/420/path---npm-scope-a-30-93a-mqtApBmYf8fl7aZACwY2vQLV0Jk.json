{"data":{"site":{"siteMetadata":{"title":"The Minimum Town","author":"Zhang Yongchao"}},"markdownRemark":{"id":"176b7a42-2616-556f-b469-4783b9a47dfd","excerpt":"Scoped Packages 域级包  在 npm 的包管理系统中，有一种 scoped packages 机制，用于将一些 packages 以   的命名形式集中在一个命名空间下面，实现域级的包管理。\n这就是我们看到的诸如  、 、 等 package…","html":"<h1>Scoped Packages 域级包</h1>\n<p> 在 npm 的包管理系统中，有一种 scoped packages 机制，用于将一些 packages 以 <code class=\"language-text\">@scope/package</code> 的命名形式集中在一个命名空间下面，实现域级的包管理。\n这就是我们看到的诸如 <code class=\"language-text\">@angular/core</code>、<code class=\"language-text\">@angular/router</code>、<code class=\"language-text\">@r/horse</code>等 package 的存在形态。\n那么如何创建和管理这种<strong>域级包</strong>（其实是小生自己译的名儿，不喜勿怪）呢。Steps steps go~</p>\n<h2>在 npm 项目中设置 scope</h2>\n<p>npm 会在用户注册账号的时候为其自动创建一个与用户名同名的 scope，之后用户也可以创建其他的 Org 作为 scope。\n下面以用户独有的作用域为例：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ mkdir scoped-packages-demo &amp;&amp; cd scoped-packages-demo\n# 这里是小生的 npm 用户名\n$ npm init --scoped=shockw4ver</code></pre></div>\n<p>然后一顿回车搞定初始化（或者直接加 <code class=\"language-text\">-y</code> 参数~），当然你也可以精致的填好每一个信息，方便回顾~</p>\n<h2>操作 scope</h2>\n<p>初始化成功以后，<code class=\"language-text\">package.json</code> 文件中的 <code class=\"language-text\">name</code> 值为 <code class=\"language-text\">@shockw4ver/scoped-packages-demo</code> ，即这个包是位于 <code class=\"language-text\">shockw4ver</code> 命名空间下的 <code class=\"language-text\">scoped-packages-demo</code>。</p>\n<p>如果你想一直在这个 scope 下开发 npm 包，可以运行全局的 npm 配置命令进行设置：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> config <span class=\"token keyword\">set</span> scope shockw4ver</code></pre></div>\n<p>此时运行 <code class=\"language-text\">npm config list</code>，可以看到：</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token punctuation\">;</span> cli configs\nmetrics<span class=\"token operator\">-</span>registry <span class=\"token operator\">=</span> <span class=\"token string\">\"https://registry.npmjs.org/\"</span>\nscope <span class=\"token operator\">=</span> <span class=\"token string\">\"@shockw4ver\"</span>\nuser<span class=\"token operator\">-</span>agent <span class=\"token operator\">=</span> <span class=\"token string\">\"npm/5.5.1 node/v8.9.3 darwin x64\"</span>\n\n<span class=\"token punctuation\">;</span> userconfig <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>zhangyongchao<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>npmrc\n<span class=\"token comment\">//registry.npm.taobao.org/:always-auth = false</span>\n<span class=\"token comment\">//registry.npm.taobao.org/:email = \"asambojur@live.cn\"</span>\n<span class=\"token comment\">//registry.npm.taobao.org/:username = \"shockw4ver\"</span>\n@asambojur<span class=\"token punctuation\">:</span>registry <span class=\"token operator\">=</span> <span class=\"token string\">\"https://registry.npmjs.org/\"</span>\nregistry <span class=\"token operator\">=</span> <span class=\"token string\">\"https://registry.npmjs.org/\"</span>\n\n<span class=\"token punctuation\">;</span> node bin location <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>node\n<span class=\"token punctuation\">;</span> cwd <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>zhangyongchao<span class=\"token operator\">/</span>Desktop<span class=\"token operator\">/</span>Samuel<span class=\"token operator\">/</span>demos\n<span class=\"token punctuation\">;</span> HOME <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>zhangyongchao\n<span class=\"token punctuation\">;</span> <span class=\"token string\">\"npm config ls -l\"</span> to show all defaults<span class=\"token punctuation\">.</span></code></pre></div>\n<p>这是已经将 scope 写到了 .npmrc 中去，作为全局的 npm 配置。</p>\n<h2>发布 scoped package</h2>\n<p>scoped package 的发布与普通 package 的发布几乎没有区别，只是需要注意设置权限：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ npm adduser\nUsername: shockw4ver\nPassword:\nEmail: (this IS public) asambojur@live.cn\nLogged in as shockw4ver to scope @asambojur on https://registry.npmjs.org/.\n\n$ npm publish --access=public\n# 这里需将访问权限设置为 public，否则它默认是发布一个 private module，这是为一个有偿服务，需要成为“paid user”。</code></pre></div>\n<p>稍等片刻：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">+ @shockw4ver/scoped-packages-demo@1.0.0</code></pre></div>\n<p>这便是发布成功了，嘿嘿~</p>\n<h2>合作开发</h2>\n<p>合作开发和普通包就更没区别~\nowner 只需将合作者添加到 collaborator 即可~\n当然了，之前应当先用版本管理工具做好同步，确保每次发布版本号不重复。</p>\n<h2>Private Modules</h2>\n<p>这里赘述一下 Private Modules 吧~\n它是 npm 提供的私有模块服务，类似于 github 的 private repository。\n当你的命名空间下的代码不想公开而又希望用 npm 进行管理的时候，可以有偿的使用这个服务。\n官方描述：</p>\n<blockquote>\n<p>When you sign up for private modules as an individual user, your scope is your username. If you create an npm Org, the orgname can be the scope. Orgs can be free or paid. Using a public Org is the only free way to use scopes in package names</p>\n</blockquote>\n<p>也就是说，个人用户名或 Org 都可以成为你的 scope，而 Orgs 可以是付费或者免费的，其中免费 Org 是通过包名使用 scope 的唯一途径</p>","frontmatter":{"title":"拾碎 —— Scoped Packages 的使用","date":"September 30, 2018","tags":["拾碎","npm"],"type":"tech"}}},"pageContext":{"slug":"/NPM-Scope/","previous":{"fields":{"slug":"/Angular-Redux/"},"frontmatter":{"title":"译：在 Angular 中使用 Redux 来管理用户界面"}},"next":{"fields":{"slug":"/2018-10-08--全家桶思维/"},"frontmatter":{"title":"工程化拾遗——聊聊全家桶"}}}}